# version: "3"
# services:
#   web:
#     image: nginx:latest
#     container_name: web
#     restart: "on-failure"
#     ports:
#       - 80:80
#     volumes:
#       - /Users/yeek0620/Desktop/bookToy/nginx/nginx.config:/etc/nginx/nginx.conf
#       - /Users/yeek0620/Desktop/bookToy/front:/usr/share/nginx/html
#     networks:
#       - book-network
#     depends_on:
#       - client

#   express-server:
#     container_name: express-book
#     build:
#       context: ./back/
#       dockerfile: Dockerfile
#     volumes:
#       - "/Users/yeek0620/Desktop/bookToy/back:/app"
#       - "/app/node_modules"
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=production
#     networks:
#       - book-network

#   client:
#     container_name: client
#     build:
#       context: ./front/
#       dockerfile: Dockerfile
#     volumes:
#       - "./front:/app"
#       - "/app/node_modules"
#     ports:
#       - "3232:3232"
#     environment:
#       - NODE_ENV=production
#     depends_on:
#       - express-server
#     networks:
#       - book-network
# networks:
#   book-network:

version: "3.3"

services:
  nginx_proxy:
    image: nginx:latest
    container_name: nginx_proxy
    restart: "on-failure"
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.config:/etc/nginx/nginx.conf
      - ./front/build:/usr/share/nginx/html

  server:
    build:
      context: ./back/
    container_name: server
    restart: "on-failure"
    expose:
      - 8080
    volumes:
      - "./backend:/backend"
      - "/backend/node_modules"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true
